{"version":3,"sources":["components/ToDoApp.js","App.js","reportWebVitals.js","index.js"],"names":["ToDoApp","useState","item","setItem","localStorage","getItem","JSON","parse","list","setList","index","setIndex","updateToDo","setUpdateToDo","useEffect","stringify","addItem","length","console","log","alert","updateList","newData","type","className","onChange","e","target","value","onKeyPress","event","key","placeholder","onClick","id","map","ele","editItem","splice","deleteItem","Button","variant","color","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRAoHeA,MAtGf,WACE,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwBF,mBAVbG,aAAaC,QAAQ,QAEvBC,KAAKC,MAAMH,aAAaC,QAAQ,SAEhC,IAMT,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAyBR,mBAAS,MAAlC,mBAAOS,EAAP,KAAaC,EAAb,KACA,EAAoCV,mBAAS,GAA7C,mBAAOW,EAAP,KAAmBC,EAAnB,KAEAC,qBAAU,WACRV,aAAaD,QAAQ,OAAQG,KAAKS,UAAUP,MAC3C,CAACA,IAEJ,IAAMQ,EAAU,WACVd,EAAKe,OAAS,GAChBR,EAAQ,GAAD,mBAAKD,GAAL,CAAWN,KAClBC,EAAQ,IACRe,QAAQC,IAAIP,EAAY,+BAGxBQ,MAAM,uBAcJC,EAAa,WACjBR,EAAc,GACd,IAAMS,EAAO,YAAOd,GACjBN,IACDoB,EAAQZ,GAASR,EACjBO,EAAQa,GACRlB,aAAaD,QAAQ,OAAQG,KAAKS,UAAUO,IAC5CnB,EAAQ,MAgBZ,OACE,eAAC,WAAD,WACE,4CACA,uBACEoB,KAAK,OACLC,UAAU,YACVC,SAAU,SAACC,GAAD,OAAOvB,EAAQuB,EAAEC,OAAOC,QAClCC,WAfiB,SAACC,GACJ,UAAdA,EAAMC,MACRnB,EAAYS,IAAgBL,MAc1BY,MAAO1B,EACP8B,YAAY,6BAEbpB,EAAY,wBAAQY,UAAU,mBAAmBS,QAASZ,EAA9C,oBAGZ,wBAAQG,UAAU,mBAAmBS,QAASjB,EAA9C,iBAID,qBAAKkB,GAAG,YAAR,SACG1B,EAAK2B,KAAI,SAACC,EAAK1B,GACd,OACE,sBAAKc,UAAU,UAAf,UACE,qBAAKA,UAAU,OAAf,SAAuBY,IACvB,iCACE,cAAC,IAAD,CAAUH,QAAS,kBApDhB,SAACvB,GAChBP,EAAQK,EAAKE,IACbC,EAASD,GACTG,EAAc,GAiDuBwB,CAAS3B,QAGpC,mCACE,cAAC,IAAD,CAAYuB,QAAS,kBA9DhB,SAACvB,GAClB,IAAMY,EAAO,YAAOd,GACpBc,EAAQgB,OAAO5B,EAAO,GACtBD,EAAQa,GA2D+BiB,CAAW7B,MAAW,SAPvB0B,QAcpC,8BACG5B,EAAKS,OAAS,EACb,cAACuB,EAAA,EAAD,CAAQC,QAAQ,YAAYR,QAjDlB,WAChBxB,EAAQ,KAgD8CiC,MAAM,UAAtD,uBAIA,SClGKC,MARf,WACE,OACE,qBAAKnB,UAAU,MAAf,SACE,cAAC,EAAD,OCMSoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4cc5c47b.chunk.js","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Button from \"@material-ui/core/Button\";\n\nconst getLocalItems = () => {\n  let list = localStorage.getItem(\"list\");\n  if (list) {\n    return JSON.parse(localStorage.getItem(\"list\"));\n  } else {\n    return [];\n  }\n};\n\nfunction ToDoApp() {\n  const [item, setItem] = useState(\"\");\n  const [list, setList] = useState(getLocalItems());\n  const [index,setIndex] = useState(null);\n  const [updateToDo, setUpdateToDo] = useState(0)\n\n  useEffect(() => {\n    localStorage.setItem(\"list\", JSON.stringify(list));\n  }, [list]);\n\n  const addItem = () => {\n    if (item.length > 0) {\n      setList([...list, item]);\n      setItem(\"\");\n      console.log(updateToDo, \"additem update to do value\")\n    }\n     else {\n      alert(\"write something...\");\n    }\n  };\n  const deleteItem = (index) => {\n    const newData = [...list];\n    newData.splice(index, 1);\n    setList(newData);\n  };\n\n  const editItem = (index) => {\n    setItem(list[index]);\n    setIndex(index);\n    setUpdateToDo(1)\n  };\n  const updateList = () => {\n    setUpdateToDo(0)\n    const newData = [...list];\n    if(item){\n      newData[index] = item;\n      setList(newData);\n      localStorage.setItem(\"list\", JSON.stringify(newData));\n      setItem(\"\");\n    }\n  }\n\n  const clearToDo = () => {\n    setList([]);\n  };\n\n  const handleKeyPress = (event) => {\n    if (event.key === \"Enter\") {\n      updateToDo?(updateList()): (addItem());\n      \n    }\n  };\n \n\n  return (\n    <Fragment>\n      <h1>TO DO LIST</h1>\n      <input\n        type=\"text\"\n        className=\"input-box\"\n        onChange={(e) => setItem(e.target.value)}\n        onKeyPress={handleKeyPress}\n        value={item}\n        placeholder=\"Add To Do...✍️\"\n      />\n      {updateToDo?(<button className=\"input-box addBtn\" onClick={updateList}>\n                  Update\n                </button>):\n      (<button className=\"input-box addBtn\" onClick={addItem}>\n        Add\n      </button>)}\n\n      <div id=\"container\">\n        {list.map((ele, index) => {\n          return (\n            <div className=\"sub-con\" key={ele}>\n              <div className=\"item\">{ele}</div>\n              <button>\n                <EditIcon onClick={() => editItem(index)} />\n              </button>\n\n              <button>\n                <DeleteIcon onClick={() => deleteItem(index)} />{\" \"}\n              </button>\n            </div>\n          );\n        })}\n      </div>\n\n      <div>\n        {list.length > 0 ? (\n          <Button variant=\"contained\" onClick={clearToDo} color=\"primary\">\n            Clear All\n          </Button>\n        ) : (\n          \"\"\n        )}\n      </div>\n    </Fragment>\n  );\n}\n\nexport default ToDoApp;\n","import './App.css';\nimport ToDoApp from './components/ToDoApp';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ToDoApp />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}